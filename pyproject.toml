[build-system]
build-backend = 'mesonpy'
requires = [
    "wheel",
    "meson-python>=0.12.0",
    "setuptools<60.0",  # Do not increase, 60.0 enables vendored distutils
    "Cython>=0.29.21",
    "python-dev-tools",
    "oldest-supported-numpy; python_version>'3.9'",
    "numpy; python_version<='3.9'"
]

[project]
name = "apexpy"
license = {file = "LICENSE"}
description = "A Python wrapper for Apex coordinates"
maintainers = [
    {name = "Angeline G. Burrell", email = "angeline.burrell@nrl.navy.mil"},
]
requires-python = ">=3.8"
dependencies = [
    # TODO: update to "pin-compatible" once possible, see
    # https://github.com/FFY00/meson-python/issues/29
    "numpy>=1.19.5",
]
readme = "README.rst"
keywords = [
    "apex",
    "modified apex",
    "quasi-dipole",
    "quasi dipole",
    "coordinates",
    "magnetic coordinates",
    "mlt",
    "magnetic local time",
    "conversion",
    "converting",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Fortran",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Utilities",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dynamic = ['version']

[tool.project.scripts]
apexpy = {reference = 'apexpy.__main__:main', type = 'console'}

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
  ]
doc = ["sphinx>=1.3", "sphinx-rtd-theme"]

[project.urls]
source = "https://github.com/aburrell/apexpy"
documentation = "https://apexpy.readthedocs.io/en/latest/"
tracker = "https://github.com/aburrell/apexpy/issues"
download = "https://github.com/aburrell/apexpy/releases"

[tool.cibuildwheel]
build = "cp*"
build-verbosity = "3"
test-command = "pytest {project}/tests"
# Will cause the wheel to be installed with `pip install <wheel_file>[test]`
test-extras = ["test"]
# Skip building on CPython 3.12 on all platforms (seems meson dosen't work at the moment)
# Also skip 32bit builds
skip = ["cp312-*", "*-win32", "*-manylinux_i686"]

[tool.cibuildwheel.linux]
manylinux-i686-image = "manylinux2014"
manylinux-x86_64-image = "manylinux2014"

[tool.cibuildwheel.macos]
before-build = "bash {project}/cibw_before_build_macos.sh"

[tool.cibuildwheel.windows]
repair-wheel-command = "bash python/build_tools/cibw_repair_wheel_command_windows.sh {wheel} {dest_dir}"

[[tool.cibuildwheel.overrides]]
select = "*-win_amd64"
environment = { PKG_CONFIG_PATH="c:/opt/64/lib/pkgconfig" }
